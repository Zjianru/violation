<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.code.vv.mapper.ViolationInfoTbMapper">
  <resultMap id="BaseResultMap" type="com.code.vv.model.ViolationInfoTb">
    <!--@Table violation_info_tb-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="license_plate" jdbcType="VARCHAR" property="licensePlate" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="place" jdbcType="VARCHAR" property="place" />
    <result column="violation_context" jdbcType="INTEGER" property="violationContext" />
    <result column="driver_license" jdbcType="VARCHAR" property="driverLicense" />
  </resultMap>
  <sql id="Base_Column_List">
    id, license_plate, `time`, place, violation_context, driver_license
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from violation_info_tb
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from violation_info_tb
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.code.vv.model.ViolationInfoTb" useGeneratedKeys="true">
    insert into violation_info_tb (license_plate, `time`, place,
      violation_context, driver_license)
    values (#{licensePlate,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, #{place,jdbcType=VARCHAR}, 
      #{violationContext,jdbcType=INTEGER}, #{driverLicense,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.code.vv.model.ViolationInfoTb" useGeneratedKeys="true">
    insert into violation_info_tb
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="licensePlate != null">
        license_plate,
      </if>
      <if test="time != null">
        `time`,
      </if>
      <if test="place != null">
        place,
      </if>
      <if test="violationContext != null">
        violation_context,
      </if>
      <if test="driverLicense != null">
        driver_license,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="licensePlate != null">
        #{licensePlate,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="place != null">
        #{place,jdbcType=VARCHAR},
      </if>
      <if test="violationContext != null">
        #{violationContext,jdbcType=INTEGER},
      </if>
      <if test="driverLicense != null">
        #{driverLicense,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.code.vv.model.ViolationInfoTb">
    update violation_info_tb
    <set>
      <if test="licensePlate != null">
        license_plate = #{licensePlate,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        `time` = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="place != null">
        place = #{place,jdbcType=VARCHAR},
      </if>
      <if test="violationContext != null">
        violation_context = #{violationContext,jdbcType=INTEGER},
      </if>
      <if test="driverLicense != null">
        driver_license = #{driverLicense,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.code.vv.model.ViolationInfoTb">
    update violation_info_tb
    set license_plate = #{licensePlate,jdbcType=VARCHAR},
      `time` = #{time,jdbcType=TIMESTAMP},
      place = #{place,jdbcType=VARCHAR},
      violation_context = #{violationContext,jdbcType=INTEGER},
      driver_license = #{driverLicense,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>